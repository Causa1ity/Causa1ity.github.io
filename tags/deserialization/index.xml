<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Deserialization on Forgotten Land</title><link>https://causality.top/tags/deserialization/</link><description>Recent content in Deserialization on Forgotten Land</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 28 Apr 2021 08:37:10 +0800</lastBuildDate><atom:link href="https://causality.top/tags/deserialization/index.xml" rel="self" type="application/rss+xml"/><item><title>Commons Collections 1 复现</title><link>https://causality.top/security/vulns/java/cc1/</link><pubDate>Wed, 28 Apr 2021 08:37:10 +0800</pubDate><guid>https://causality.top/security/vulns/java/cc1/</guid><description>利用链分析 先看一眼gadget chain： /* Gadget chain: ObjectInputStream.readObject() AnnotationInvocationHandler.readObject() Map(Proxy).entrySet() AnnotationInvocationHandler.invoke() LazyMap.get() ChainedTransformer.transform() ConstantTransformer.transform() InvokerTransformer.transform() Method.invoke() Class.getMethod() InvokerTransformer.transform() Method.invoke() Runtime.getRuntime() InvokerTransformer.transform() Method.invoke() Runtime.exec() Requires: commons-collections */ 参考这个利用链，其利用的关键在于几个Transformer，所以先来关注这几个类的方法的详细信息： ChainedTransformer 根据描述，这个</description></item><item><title>Urldns 复现</title><link>https://causality.top/security/vulns/java/urldns/</link><pubDate>Sun, 25 Apr 2021 08:26:45 +0800</pubDate><guid>https://causality.top/security/vulns/java/urldns/</guid><description>URLDNS分析 URLDNS是ysoserial中一个利用链的名称，其参数是一个URL，触发的结果是一次DNS请求。 核心代码很短： public class URLDNS implements ObjectPayload&amp;lt;Object&amp;gt; { public Object getObject(final String url) throws Exception { URLStreamHandler handler = new SilentURLStreamHandler(); HashMap ht = new HashMap(); URL u = new URL(null, url, handler); ht.put(u, url); Reflections.setFieldValue(u, &amp;quot;hashCode&amp;quot;,</description></item><item><title>Java Reserialization</title><link>https://causality.top/security/posts/java/deserialization/</link><pubDate>Sun, 11 Apr 2021 20:01:18 +0800</pubDate><guid>https://causality.top/security/posts/java/deserialization/</guid><description>初窥 Before 在理解Java反序列化漏洞之前，首先需要了解Java序列化与反序列化、Java反射的基本概念： Java 序列化 Java 反射 简单来说，Java 序列化是指将 Java 对象转换成一个字节数组的过程；反序列化则是将一个字节数</description></item></channel></rss>