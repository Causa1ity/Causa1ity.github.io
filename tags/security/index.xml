<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security on Noth</title>
    <link>https://causality.top/tags/security/</link>
    <description>Recent content in Security on Noth</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 27 Sep 2021 23:05:34 +0800</lastBuildDate><atom:link href="https://causality.top/tags/security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java序列化(ObjectOutputStream)过程分析</title>
      <link>https://causality.top/security/javasec/java%E5%BA%8F%E5%88%97%E5%8C%96%E8%BF%87%E7%A8%8B%E5%88%86%E6%9E%90/</link>
      <pubDate>Mon, 27 Sep 2021 23:05:34 +0800</pubDate>
      
      <guid>https://causality.top/security/javasec/java%E5%BA%8F%E5%88%97%E5%8C%96%E8%BF%87%E7%A8%8B%E5%88%86%E6%9E%90/</guid>
      <description>对Java利用ObjectOutputStream对对象进行序列化操作的流程进行了学习，记录下对对象序列化的过程，最后按照对象类型分类总结出了序列化后的字节序列的含义。 构造函数和writeObject</description>
    </item>
    
    <item>
      <title>CommonsCollections3-7 利用连分析</title>
      <link>https://causality.top/security/javasec/commonscollections3-7/</link>
      <pubDate>Sat, 25 Sep 2021 17:06:23 +0800</pubDate>
      
      <guid>https://causality.top/security/javasec/commonscollections3-7/</guid>
      <description>理解了CC1和CC2之后，CC3-7其实十分简单，CC3和CC1类似，但是换了一种命令执行的方式，CC4也是这样；而CC5-7则是寻找到了另外触发LazyMap.get的方式，在这个前提下，就只需要关</description>
    </item>
    
    <item>
      <title>CommonsCollections2 利用链分析</title>
      <link>https://causality.top/security/javasec/commonscollections2/</link>
      <pubDate>Sat, 25 Sep 2021 16:35:53 +0800</pubDate>
      
      <guid>https://causality.top/security/javasec/commonscollections2/</guid>
      <description>Gadget Chain /* Gadget chain: ObjectInputStream.readObject() PriorityQueue.readObject() ... TransformingComparator.compare() InvokerTransformer.transform() Method.invoke() Runtime.exec() */ 这个链分成两部分，前半部分为触发TransformingComparator.compare() ，后半部分则是通过其构造一个命令执行。 TransformingComparat</description>
    </item>
    
    <item>
      <title>CommonsCollections1 利用链分析</title>
      <link>https://causality.top/security/javasec/commonscollections1/</link>
      <pubDate>Tue, 21 Sep 2021 23:28:15 +0800</pubDate>
      
      <guid>https://causality.top/security/javasec/commonscollections1/</guid>
      <description>Gadget Chain Gadget chain: ObjectInputStream.readObject() AnnotationInvocationHandler.readObject() Map(Proxy).entrySet() AnnotationInvocationHandler.invoke() LazyMap.get() ChainedTransformer.transform() ConstantTransformer.transform() InvokerTransformer.transform() Method.invoke() Class.getMethod() InvokerTransformer.transform() Method.invoke() Runtime.getRuntime() InvokerTransformer.transform() Method.invoke() Runtime.exec() Requires: commons-collections 这条利用链其实可以分为两个部分，后半部分从ChainedTransformer之后目的是为了构造一个可序列化的命令执行，前半部分则是用来触发这个操作的调用链</description>
    </item>
    
    <item>
      <title>Java 反序列化漏洞</title>
      <link>https://causality.top/security/javasec/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</link>
      <pubDate>Tue, 13 Apr 2021 20:01:18 +0800</pubDate>
      
      <guid>https://causality.top/security/javasec/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</guid>
      <description>初窥 Before 在理解Java反序列化漏洞之前，首先需要了解Java序列化与反序列化、Java反射的基本概念： Java 序列化 Java 反射 简单来说，Java 序列化是指将 Java 对象转换成一个字节数组的过程；反序列化则是将一个字节数</description>
    </item>
    
    <item>
      <title>BUUCTF Web 部分题解（2）</title>
      <link>https://causality.top/security/writeups/buu-web-2/</link>
      <pubDate>Mon, 06 Apr 2020 10:16:52 +0800</pubDate>
      
      <guid>https://causality.top/security/writeups/buu-web-2/</guid>
      <description>[SUCTF 2019]Pythonginx &amp;hellip; [极客大挑战 2019]Upload 文件上传。 测试之后发现有四个检查，首先是检查文件类型，这个可以直接抓包修改；其次会检查文件的扩展名，可以使用phtml绕过；然会检查文件的头部信息，可以添加 GIF89a 绕过；最后会检查内容 &amp;</description>
    </item>
    
    <item>
      <title>MRCTF Web 部分题解</title>
      <link>https://causality.top/security/writeups/mrctf/</link>
      <pubDate>Mon, 30 Mar 2020 15:50:08 +0800</pubDate>
      
      <guid>https://causality.top/security/writeups/mrctf/</guid>
      <description>部分 MRCTF 新生赛 Web 方向的 Writeup ez_bypass 题目给出了源码： include &amp;#39;flag.php&amp;#39;; $flag=&amp;#39;MRCTF{xxxxxxxxxxxxxxxxxxxxxxxxx}&amp;#39;; if(isset($_GET[&amp;#39;gg&amp;#39;])&amp;amp;&amp;amp;isset($_GET[&amp;#39;id&amp;#39;])) { $id=$_GET[&amp;#39;id&amp;#39;]; $gg=$_GET[&amp;#39;gg&amp;#39;]; if (md5($id) === md5($gg) &amp;amp;&amp;amp; $id !== $gg) { echo &amp;#39;You got the first step&amp;#39;; if(isset($_POST[&amp;#39;passwd&amp;#39;])) { $passwd=$_POST[&amp;#39;passwd&amp;#39;]; if (!is_numeric($passwd)) { if($passwd==1234567) { echo &amp;#39;Good Job!&amp;#39;; highlight_file(&amp;#39;flag.php&amp;#39;); die(&amp;#39;By Retr_0&amp;#39;); } else { echo &amp;#34;can you think twice??&amp;#34;; } } else{ echo &amp;#39;You can not get it !&amp;#39;; } } else{ die(&amp;#39;only one way to get the flag&amp;#39;); } } else { echo &amp;#34;You are not a real hacker!&amp;#34;; } } else{ die(&amp;#39;Please input</description>
    </item>
    
    <item>
      <title>Bandit 靶场练习记录</title>
      <link>https://causality.top/security/writeups/natas/</link>
      <pubDate>Thu, 26 Mar 2020 21:59:01 +0800</pubDate>
      
      <guid>https://causality.top/security/writeups/natas/</guid>
      <description>Wargames是OverTheWire社区提供的一个帮助学习安全知识和实践的一个平台，提供了各式各样的项目模块，可以在其中练级基本的安全技能。 Natas0是其中一个比较基础的模块，主要涉及Web方向</description>
    </item>
    
    <item>
      <title>BJD2-Web 部分 Write up</title>
      <link>https://causality.top/security/writeups/bjd2/</link>
      <pubDate>Mon, 23 Mar 2020 21:13:23 +0800</pubDate>
      
      <guid>https://causality.top/security/writeups/bjd2/</guid>
      <description>BJD2 部分Web题Writeup Schrödinger 查看源码或者直接在页面上能看到一个 test.php, 访问之后只是一个登陆界面，提示在密码中留了一些很棒的东西。尝试登陆失败，也没有SQL注入什么的，先返回上个页面看</description>
    </item>
    
    <item>
      <title>BUUCTF Web 部分题解（1）</title>
      <link>https://causality.top/security/writeups/buu-web-1/</link>
      <pubDate>Tue, 03 Mar 2020 19:59:44 +0800</pubDate>
      
      <guid>https://causality.top/security/writeups/buu-web-1/</guid>
      <description>Web小白，从0开始入门。 WarmUp 打开是一个滑稽的表情，直接源码发现有一个source.php，打开可以看到源码： &amp;lt;?php highlight_file(__FILE__); class emmm { public static function checkFile(&amp;amp;$page) { $whitelist = [&amp;#34;source&amp;#34;=&amp;gt;&amp;#34;source.php&amp;#34;,&amp;#34;hint&amp;#34;=&amp;gt;&amp;#34;hint.php&amp;#34;]; if (!isset($page) || !is_string($page)) { echo &amp;#34;you can&amp;#39;t see it&amp;#34;; return false; } if (in_array($page, $whitelist)) { return true; } $_page = mb_substr( $page, 0, mb_strpos($page . &amp;#39;?&amp;#39;, &amp;#39;?&amp;#39;) ); if (in_array($_page, $whitelist))</description>
    </item>
    
    <item>
      <title>Bandit 靶场练习记录</title>
      <link>https://causality.top/security/writeups/bandit/</link>
      <pubDate>Mon, 17 Feb 2020 16:02:18 +0800</pubDate>
      
      <guid>https://causality.top/security/writeups/bandit/</guid>
      <description>Wargames是OverTheWire社区提供的一个帮助学习安全知识和实践的一个平台，提供了各式各样的项目模块，可以在其中练级基本的安全技能。 Bandit是Wargames最基础的一个模块，用来练习</description>
    </item>
    
  </channel>
</rss>
